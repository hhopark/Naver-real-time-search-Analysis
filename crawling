import datetime
import pandas as pd
import numpy as np
import time
import requests
from bs4 import BeautifulSoup
from lxml.html import fromstring
pd.options.display.max_rows = 100

age_list = ['20s']
date_range1 = range(0,27)
date_range2 = range(41,91)
hour_range = ['00']

url_A = 'https://datalab.naver.com/keyword/realtimeList.naver?age='
url_Z = '%3A00%3A00&entertainment=-2&groupingLevel=4&marketing=2&news=-2&sports=-2'
headers = {'User-Agent': 'Mozilla/5.0 (Macintosh)...'}

start_date = datetime.datetime.now() + datetime.timedelta(days = -int(1))

print(start_date)
list = []
for age in age_list:
    for date in date_range1:
        target_date = start_date + datetime.timedelta(days = -int(date))
        target_date = target_date.strftime('%Y-%m-%d')
        print(target_date)
        for hour in hour_range:
            url = url_A+age+'&datetime='+target_date+'T'+hour+url_Z
            response = requests.get(url, headers = headers)
            value = fromstring(response.text)

            for rank in range(1,11):
                time.sleep(4)
                result = value.xpath(f'//*[@id="content"]/div/div[2]/div[2]/div[2]/div/div/ul[1]/li[{rank}]/div/span[2]/span[1]/text()')
                list.append([age,target_date,hour,rank,result[0]])
                print([age, target_date, hour, rank, result[0]])

for age in age_list:
    for date in date_range2:
        target_date = start_date + datetime.timedelta(days = -int(date))
        target_date = target_date.strftime('%Y-%m-%d')
        for hour in hour_range:
            url = url_A+age+'&datetime='+target_date+'T'+hour+url_Z
            response = requests.get(url, headers = headers)
            value = fromstring(response.text)

            for rank in range(1,11):
                time.sleep(4)
                result = value.xpath(f'//*[@id="content"]/div/div[2]/div[2]/div[2]/div/div/ul[1]/li[{rank}]/div/span[2]/span[1]/text()')
                list.append([age,target_date,hour,rank,result[0]])
                print([age, target_date, hour, rank, result[0]])

raw_data = pd.DataFrame(list)
raw_data.columns = ['연령대','일자','시간','랭킹','검색어']
raw_data.to_csv("raw_data_new.csv", header = True, index = False,encoding='cp949')
